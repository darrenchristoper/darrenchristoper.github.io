{
  "version": 3,
  "sources": ["../../@astrojs/react/dist/index.js"],
  "sourcesContent": ["import { version as ReactVersion } from \"react-dom\";\nfunction getRenderer() {\n  return {\n    name: \"@astrojs/react\",\n    clientEntrypoint: ReactVersion.startsWith(\"18.\") ? \"@astrojs/react/client.js\" : \"@astrojs/react/client-v17.js\",\n    serverEntrypoint: ReactVersion.startsWith(\"18.\") ? \"@astrojs/react/server.js\" : \"@astrojs/react/server-v17.js\",\n    jsxImportSource: \"react\",\n    jsxTransformOptions: async () => {\n      var _a;\n      const babelPluginTransformReactJsxModule = await import(\"@babel/plugin-transform-react-jsx\");\n      const jsx = ((_a = babelPluginTransformReactJsxModule == null ? void 0 : babelPluginTransformReactJsxModule.default) == null ? void 0 : _a.default) ?? (babelPluginTransformReactJsxModule == null ? void 0 : babelPluginTransformReactJsxModule.default);\n      return {\n        plugins: [\n          jsx(\n            {},\n            {\n              runtime: \"automatic\",\n              // This option tells the JSX transform how to construct the \"*/jsx-runtime\" import.\n              // In React v17, we had to shim this due to an export map issue in React.\n              // In React v18, this issue was fixed and we can import \"react/jsx-runtime\" directly.\n              // See `./jsx-runtime.js` for more details.\n              importSource: ReactVersion.startsWith(\"18.\") ? \"react\" : \"@astrojs/react\"\n            }\n          )\n        ]\n      };\n    }\n  };\n}\nfunction getViteConfiguration() {\n  return {\n    optimizeDeps: {\n      include: [\n        ReactVersion.startsWith(\"18.\") ? \"@astrojs/react/client.js\" : \"@astrojs/react/client-v17.js\",\n        \"react\",\n        \"react/jsx-runtime\",\n        \"react/jsx-dev-runtime\",\n        \"react-dom\"\n      ],\n      exclude: [\n        ReactVersion.startsWith(\"18.\") ? \"@astrojs/react/server.js\" : \"@astrojs/react/server-v17.js\"\n      ]\n    },\n    resolve: {\n      dedupe: [\"react\", \"react-dom\"]\n    },\n    ssr: {\n      external: ReactVersion.startsWith(\"18.\") ? [\"react-dom/server\", \"react-dom/client\"] : [\"react-dom/server.js\", \"react-dom/client.js\"],\n      noExternal: [\n        // These are all needed to get mui to work.\n        \"@mui/material\",\n        \"@mui/base\",\n        \"@babel/runtime\",\n        \"redoc\",\n        \"use-immer\"\n      ]\n    }\n  };\n}\nfunction src_default() {\n  return {\n    name: \"@astrojs/react\",\n    hooks: {\n      \"astro:config:setup\": ({ addRenderer, updateConfig }) => {\n        addRenderer(getRenderer());\n        updateConfig({ vite: getViteConfiguration() });\n      }\n    }\n  };\n}\nexport {\n  src_default as default\n};\n"],
  "mappings": ";;;;;;;;;AAAA,uBAAwC;AACxC,SAAS,cAAc;AACrB,SAAO;AAAA,IACL,MAAM;AAAA,IACN,kBAAkB,iBAAAA,QAAa,WAAW,KAAK,IAAI,6BAA6B;AAAA,IAChF,kBAAkB,iBAAAA,QAAa,WAAW,KAAK,IAAI,6BAA6B;AAAA,IAChF,iBAAiB;AAAA,IACjB,qBAAqB,YAAY;AAC/B,UAAI;AACJ,YAAM,qCAAqC,MAAM,OAAO,mBAAmC;AAC3F,YAAM,QAAQ,KAAK,sCAAsC,OAAO,SAAS,mCAAmC,YAAY,OAAO,SAAS,GAAG,aAAa,sCAAsC,OAAO,SAAS,mCAAmC;AACjP,aAAO;AAAA,QACL,SAAS;AAAA,UACP;AAAA,YACE,CAAC;AAAA,YACD;AAAA,cACE,SAAS;AAAA;AAAA;AAAA;AAAA;AAAA,cAKT,cAAc,iBAAAA,QAAa,WAAW,KAAK,IAAI,UAAU;AAAA,YAC3D;AAAA,UACF;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAAA,EACF;AACF;AACA,SAAS,uBAAuB;AAC9B,SAAO;AAAA,IACL,cAAc;AAAA,MACZ,SAAS;AAAA,QACP,iBAAAA,QAAa,WAAW,KAAK,IAAI,6BAA6B;AAAA,QAC9D;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACF;AAAA,MACA,SAAS;AAAA,QACP,iBAAAA,QAAa,WAAW,KAAK,IAAI,6BAA6B;AAAA,MAChE;AAAA,IACF;AAAA,IACA,SAAS;AAAA,MACP,QAAQ,CAAC,SAAS,WAAW;AAAA,IAC/B;AAAA,IACA,KAAK;AAAA,MACH,UAAU,iBAAAA,QAAa,WAAW,KAAK,IAAI,CAAC,oBAAoB,kBAAkB,IAAI,CAAC,uBAAuB,qBAAqB;AAAA,MACnI,YAAY;AAAA;AAAA,QAEV;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACF;AAAA,IACF;AAAA,EACF;AACF;AACA,SAAS,cAAc;AACrB,SAAO;AAAA,IACL,MAAM;AAAA,IACN,OAAO;AAAA,MACL,sBAAsB,CAAC,EAAE,aAAa,aAAa,MAAM;AACvD,oBAAY,YAAY,CAAC;AACzB,qBAAa,EAAE,MAAM,qBAAqB,EAAE,CAAC;AAAA,MAC/C;AAAA,IACF;AAAA,EACF;AACF;",
  "names": ["ReactVersion"]
}
